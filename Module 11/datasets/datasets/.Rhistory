q()
q()
sd(c(5,8,12))
which.min(c(4,1,6))
demo()
q()
q()
movies = read.table("Movies.txt", header == FALSE, quote = "\"")
movies = read.table("Movies.txt", HEADER == FALSE, quote = "\"")
movies = read.table("Movies.txt", header = FALSE,sep = "|" quote = "\"")
movies = read.table("Movies.txt", header = FALSE, sep = "|", quote = "\"")
movies = read.table("Movies.txt", header = FALSE, sep = "|", quote = "\"")
str(movies)
colnames(movies) = c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", "Unknown", "Action", "Adeventure", "Animation", "Childrens", "Comedy", "Crime", "Documentary", "Drama", "Fantasy", "FilmNoir", "Horror", "Musical", "Mystery", "Romance", "SciFi", "Thriller", "War", "Western")
str(movies)
movies$ID = NULL
movies$Title = NULL
movies$ReleaseDate = NULL
movies$VideoReleaseDate = NULL
str(movies)
a = subset(movies, movies$Action == 1 && movies$horror == 1)
str(a)
a
nrow(a)
a = subset(movies, movies$Action == "1" && movies$horror == "1")
a
a = subset(movies, Action == "1" && Horror == "1")
a
a = subset(movies, movies$Action == "1" && movies$Horror == "1")
a
a = subset(movies, movies$Action == "1" & movies$Horror == "1")
a
nrow(a)
movies = unique(movies)
distances = dist(movies[2:20], method = "euclidean")
clusterMovies = hclust(distances, method = "ward.D")
plot(clusterMovies)
clusterGroups = cutree(clusterMovies, k = 7)
summary(clusterGroups)
tapply(movies$Adventure, clusterGroups, mean)
tapply(movies$Action, clusterGroups, mean)
tapply(movies$Adeventure, clusterGroups, mean)
cluster1 = subset[movies, clusterGroups == 1)
cluster1 = subset(movies, clusterGroups == 1)
str(cluster1)
b = subset(cluster1, cluster1$Adeventure == 1)
nrow(b)
tapply(movies$Children, clusterGroups, mean)
tapply(movies$Fantasy, clusterGroups, mean)
k = 5
k = 7
set.seed(1000)
KMC = kmeans(movies, centers = k, iter.max = 1000)
str(KMC)
KMC = kmeans(movies, centers = k)
KMC = kmeans(movies, centers = 7)
KMC = kmeans(movies, 7)
q()
