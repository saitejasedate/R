q()
q()
sd(c(5,8,12))
which.min(c(4,1,6))
demo()
q()
q()
str(movies)
movies = read.table("movieLens.txt", header = FAlSE, sep = "|", quote = "\"")
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "\"")
str(movies)
movies = read.table("movieLens.txt", header = TRUE, sep = "|", quote = "\"")
str(movies)
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "\"")
str(movies)
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "\"")
movies = read.table("movieLens.txt", header = FALSE, sep = "|")
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "\"")
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "("")
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "()"")
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "*")
movies
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "\"")
movies = read.table("movieLens.txt", header = FAlSE, sep = "|", quote = "\"")
movies = read.table("movieLens.txt", header = FALSE, sep = "|", quote = "\"")
str(movies)
colNames(movies) = c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", "Unknown", "Action", "Adeventure", "Animation", "Childrens", "Comedy", "Crime", "Documentary", "Drama", "Fantasy", "FilmNoir", "Horror", "Musical", "Mystery", "Romance", "SciFi", "Thriller", "War", "Western")
colnames(movies) = c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", "Unknown", "Action", "Adeventure", "Animation", "Childrens", "Comedy", "Crime", "Documentary", "Drama", "Fantasy", "FilmNoir", "Horror", "Musical", "Mystery", "Romance", "SciFi", "Thriller", "War", "Western")
str(colnames)
str(movies)
movies$ID = NULL
movies$ReleaseDate =NULL
movies$VideoReleaseDate =NULL
movies$IMDB = NULL
movies = unique(movies)
str(movies)
distances = dist(movies[2:20], method = "euclidean")
distances
clusterMovies = 
clusterMovies = hclust(distances, method = "ward")
clusterMovies = hclust(distances, method = "ward.D")
plot(clusterMovies)
clusterGroups = cutree(clusterMovies, k = 10)
tapply(movies$Action, clusterGroups, mean)
tapply(movies$Romance, clusterGroups, mean)
subset(movies, Title=="Men in Black (1997)")
clusterGroups[257]
cluster2 = subset(movies, clusterGroups==2)
cluster2$Title[1:10]
flower = read.csv("flower.csv", header = FALSE)
structure
str(flower)
flowerMatrix = as.matrix(flower)
str(flowerMatrix)
flowerVector = as.vector(flowerMatrix)
str(flowerVector)
flowerVector2 = as.vector(flower)
str(flowerVector2)
distance = dist(flowerVector, method = "euclidean")
clusterIntensity = hclust(distance, method="ward.D")
plot(clusterIntensity)
rect.hclust(clusterIntensity, k = 3, border = "red")
rect.hclust(clusterIntensity, k = 3, border = "red")
x <- rect.hclust(clusterIntensity, k = 3, border = "red")
hc = rect.hclust(clusterIntensity, k = 3, border = "red")
hc = rect.hclust(clusterIntensity, k = 2, border = "red")
tapply(flowerVector, flowerClusters, mean)
flowerClusters = cutree(clusterIntensity, k = 3)
flowerClusters
tapply(flowerVector, flowerClusters, mean)
dim(flowerClusters) = c(50,50)
image(flowerClusters, axes = FALSE)
image(flowerMatrix,axes=FALSE,col=grey(seq(0,1,length=256)))
healthy = read.csv("healthy.csv", header=FALSE)
healthyMatrix = as.matrix(healthy)
str(healthyMatrix)
image(healthyMatrix,axes=FALSE,col=grey(seq(0,1,length=256)))
healthyVector = as.vector(healthyMatrix)
str(healthyVector)
k = 5
set.seed(1)
KMC = kmeans(healthyVector, centers = k, iter.max = 1000)
str(KMC)
healthyClusters = KMC$cluster
KMC$centers[2]
dim(healthyClusters) = c(nrow(healthyMatrix), ncol(healthyMatrix))
image(healthyClusters, axes = FALSE, col=rainbow(k))
tumor = read.csv("tumor.csv", header=FALSE)
tumorMatrix = as.matrix(tumor)
tumorVector = as.vector(tumorMatrix)
install.packages("flexclust")
install.packages("flexclust")
library(flexclust)
install.packages("flexclust")
dailyKos = read.csv("dailykos.csv")
q()
install.packages("flexclust")
library(flexclust)
tumorVector = as.vector(tumorMatrix)
q()
stocks = read.csv("StocksCluster.csv")
nrow(stocks)
str(stocks)
table(stocks$PositiveDec)
6324/(6324+5256)
cor(stocks)
summary(stocks)
set.seed(144)
library(caTools)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
train = subset(stocks, spl == TRUE)
test = subset(stocks, spl == FALSE)
StocksModel = glm(PositiveDec ~ ., data = train, family = "binomial")
predModel = predict(StocksModel, type = "response")
table(train$PositiveDec, predModel>0.5)
(990+3640)/nrow(train)
predTestModel = predict(StocksModel, newdata = test, type = "response")
table(test$PositiveDec, predTestModel>0.5)
(417+1553)/nrow(test)
table(test$PositiveDec)
1897/(1577+1897)
limitedTrain = train
limitedTrain$PositiveDec = NULL
limitedTest = test
limitedTest$PositiveDec = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
mean(normTrain$ReturnJan)
mean(normTest$ReturnJan)
set.seed(144)
km = kmeans(normTrain, centers = 3)
table(km$cluster)
library(flexclust)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata = normTest)
table(clusterTest)
stocksTrain1 = subset(train, clusterTrain == 1)
stocksTrain2 = subset(train, clusterTrain == 2)
stocksTrain3 = subset(train, clusterTrain == 3)
stocksTest1 = subset(test, clusterTest == 1)
stocksTest2 = subset(test, clusterTest == 2)
stocksTest3 = subset(test, clusterTest == 3)
mean(stocksTrain1$PositiveDec)
mean(stocksTrain2$PositiveDec)
mean(stocksTrain3$PositiveDec)
StocksModel1 = glm(PositiveDec ~ ., data = stocksTrain1, family = binomial)
StocksModel2 = glm(PositiveDec ~ ., data = stocksTrain2, family = binomial)
StocksModel3 = glm(PositiveDec ~ ., data = stocksTrain3, family = binomial)
summary(StocksModel1)
summary(StocksModel2)
summary(StocksModel3)
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
(30+774)/nrow(stocksTest1)
table(stocksTest2$PositiveDec, PredictTest2 > 0.5)
(388+757)/nrow(stocksTest2)
table(stocksTest3$PositiveDec, PredictTest3 > 0.5)
(49+13)/nrow(stocksTest3)
AllPredictions = c(PredictTest1, PredictTest2, PredictTest3)
AllOutcomes = c(stocksTest1$PositiveDec, stocksTest2$PositiveDec, stocksTest3$PositiveDec)
table(AllOutcomes, AllPredictions > 0.5)
(467+1544)/(467+1110+353+1544)
airlines = read.csv("AirlinesCluster.csv")
summary(airlines)
library(caret)
preproc = preProcess(airlines)
airlinesNorm = predict(preproc, airlines)
summary(airlinesNorm)
distances = dist(airlinesNorm, method = "euclidean")
cluster = hclust(distances, method = "ward.D")
plot(cluster)
clusterGroups = cutree(cluster, k = 5)
table(clusterGroups)
colMeans(subset(airlines, clusterGroups == 1))
colMeans(subset(airlines, clusterGroups == 2))
colMeans(subset(airlines, clusterGroups == 3))
colMeans(subset(airlines, clusterGroups == 4))
colMeans(subset(airlines, clusterGroups == 5))
set.seed(88)
kmeansClust = kmeans(airlinesNorm, centers = 5, iter.max = 1000)
table(kmeansClust$cluster)
stocks = read.csv("StocksCluster.csv")
nrow(stocks)
str(stocks)
table(stocks$PositiveDec)
6324/(6324+5256)
cor(stocks)
summary(stocks)
set.seed(144)
library(caTools)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
train = subset(stocks, spl == TRUE)
test = subset(stocks, spl == FALSE)
StocksModel = glm(PositiveDec ~ ., data = train, family = "binomial")
predModel = predict(StocksModel, type = "response")
table(train$PositiveDec, predModel>0.5)
(990+3640)/nrow(train)
predTestModel = predict(StocksModel, newdata = test, type = "response")
table(test$PositiveDec, predTestModel>0.5)
(417+1553)/nrow(test)
table(test$PositiveDec)
1897/(1577+1897)
limitedTrain = train
limitedTrain$PositiveDec = NULL
limitedTest = test
limitedTest$PositiveDec = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
mean(normTrain$ReturnJan)
mean(normTest$ReturnJan)
set.seed(144)
km = kmeans(normTrain, centers = 3)
table(km$cluster)
library(flexclust)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata = normTest)
table(clusterTest)
stocksTrain1 = subset(train, clusterTrain == 1)
stocksTrain2 = subset(train, clusterTrain == 2)
stocksTrain3 = subset(train, clusterTrain == 3)
stocksTest1 = subset(test, clusterTest == 1)
stocksTest2 = subset(test, clusterTest == 2)
stocksTest3 = subset(test, clusterTest == 3)
mean(stocksTrain1$PositiveDec)
mean(stocksTrain2$PositiveDec)
mean(stocksTrain3$PositiveDec)
StocksModel1 = glm(PositiveDec ~ ., data = stocksTrain1, family = binomial)
StocksModel2 = glm(PositiveDec ~ ., data = stocksTrain2, family = binomial)
StocksModel3 = glm(PositiveDec ~ ., data = stocksTrain3, family = binomial)
summary(StocksModel1)
summary(StocksModel2)
summary(StocksModel3)
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
(30+774)/nrow(stocksTest1)
table(stocksTest2$PositiveDec, PredictTest2 > 0.5)
(388+757)/nrow(stocksTest2)
table(stocksTest3$PositiveDec, PredictTest3 > 0.5)
(49+13)/nrow(stocksTest3)
AllPredictions = c(PredictTest1, PredictTest2, PredictTest3)
AllOutcomes = c(stocksTest1$PositiveDec, stocksTest2$PositiveDec, stocksTest3$PositiveDec)
table(AllOutcomes, AllPredictions > 0.5)
(467+1544)/(467+1110+353+1544)
q()
